1:
Create a Java program that uses the throws keyword to declare an exception being thrown from a method and handle it in the calling code.

class A extends Exception {
    
    A(String sc)
    {
        super(sc);
    }
    
}
public class Main{
    public static void main(String [] args)
    {
        try{
            throw new A("hello i am error");   
        }
        catch(A e){
            System.out.print(e.getMessage());
        }
    }
}

*************************************************************************************************************8
		MODERATE LEVEL 
1:
Write a Java program that reads an integer from the user and handles the InputMismatchException when the user enters a non-integer input.

import java.util.*;
public class Main{
    public static void main(String [] args)
    {
        try{
            Scanner input=new Scanner(System.in);
            int a=input.nextInt();
            System.out.print(a);
            
        }
        catch(Exception sc)
        {
            System.out.print(sc);
        }
    }
}




3:
Create a Java program that defines a method to divide two numbers and handle ArithmeticException. Then, invoke this method and handle the exception in the calling code.
-----------------------------------------------------

public class All{

    static void show()
    {
        int a=2/0;
        System.out.print(a+" ");
    }
    public static void main(String [] args)
    {
        try {
            show();
        }

        catch(Exception sc)
        {
            System.out.print(sc+"  "+"This is Excpetion :");
        }
    }
}


4:
Write a Java program that demonstrates the use of the try-catch-finally construct for exception handling. The program should read a file and print its content, and then close the file in the finally block.
-----

file A

public class Main{
    public static void main(String [] args)
    {
        A scf=new A();
    }
}

file B 

public class Main{
    public static void main(String [] args)
    {
       try{
           System.out.print("This is sjdl");
       }
       catch(Exception sc)
       {
           System.out.print("sdjk;f");
       }
        finally{
            System.out.print("jskl;d");
        }
    }
}



5:
Create a Java program that defines a custom unchecked exception. Use this exception to handle a specific situation in the program.


class A{
    public void show()
    {
        int sdlk=9/0;
        System.out.print("sdlk");
        // throw Exception ("jo");
    }
}
public class Main{
    public static void main(String [] args)
    {
            try{
                A sc=new A();
                sc.show();
            }
            catch(Exception o){
                System.out.print("Exception ");
            }
    }
}
