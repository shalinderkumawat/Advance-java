1)string : 
print 

regex is my learning platform 

Ans)

public class Main extends Thread{
  public void run()
  {
    String name="Regex is a learning platform";

    System.out.println(name);
  }
  public static void main(String [] args)
  {
    Main m=new Main();
    m.start();
    
  }

}

2)
string : 
print 

regex is my learning platform 
count : number of characters 

Ans)
public class Main extends Thread{
  public void run()
  {
    String sc="regex is my learning platform ";

    // first way
    System.out.println(sc.length());

    // throw the for loop

    char a[]=sc.toCharArray();
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      count++;
    }
    System.out.println(count+" Throw the for loop");
  }
  public static void main(String [] args)
  {
    Main cs=new Main();
    cs.start();
  }
}


3)String : 
input a character check characher present or not ? 
how many time present ? 

Ans)
import java.util.Scanner;

public class Main implements Runnable {
  public void run()
  {
    Scanner input=new Scanner (System.in);
    System.out.println("Enter the cahracter you want ");
    char find=input.next().charAt(0);
    String sc="regex is a learning platform";

    char a[]=sc.toCharArray();
    int store=0;
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==find)
      {
        store=a[i];
        count++;
      }
    }
    if(store==find)
    {
      System.out.println("yes"+" : Times present :"+count);
    }
    else {
      System.out.println("no");
    }
  }
  public static void main(String[] args)
  {
    Main m = new Main();
    Thread sc=new Thread(m);
    sc.start();
  }
}


4)String vowel is present or not ?
how many vowel present (counting)
which is consonant and vowel 

regex is my learning platform :present
---------------

public class Main extends Thread{
  public void run()
  {
    String name="Regex is a learning platform";
    char a[]=name.toCharArray();

    int count=0;
    char sc;
    char consonent;


    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
        count++;
        sc=a[i];
        System.out.print(sc +" : Index : "+i);
        System.out.println("");
        
      }
      
    }
    System.out.println("");
    for(int i=0;i<a.length;i++)
    {
      if(a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')
      {
        
        consonent=a[i];
        System.out.print(consonent +" :This is consonent Index : "+i);
        System.out.println("");
      }
      
    }
    
    
  }
  public static void main(String [] args)
  {
    Main m=new Main();
    m.start();
  }
}


---------------
5)
want to find index :user 
i =>indexing 
-------------

Ans)
import java.util.Scanner;

public class Main extends Thread{
  public void run()
  {
      String name="regex is a learning platform";
      char sc[]=name.toCharArray();
      Scanner  input=new Scanner (System.in);
      System.out.println("Enter the index value what you want");
      int index=input.nextInt();

     for(int i=index;i<sc.length;i++)
     {
      
      System.out.println(sc[i]);
      break;
     }
  }
  public static void main(String [] args)
  {
    Main sc=new Main();
    sc.start();
    
  }
}


6)
String is print reverse 

Ans)
import java.util.Scanner;

public class Main extends Thread{
  public void run(){
    Scanner input=new Scanner (System.in);
    System.out.println("Enter the Strin ");
    String name=input.nextLine();

    char a[]=name.toCharArray();

    for(int i=a.length-1;i>=0;i--)
    {
      System.out.print(a[i]+" ");
    }
  }
  public static void main(String [] args)
  {
    Main m=new Main();
    m.start();
  }
}

7)
to check the string is pallindrome or not ? 
->array pallindrome logic 
abcba 
---------------------------------------------------

Ans)


??



8)
which character is duplicate in string? 
how much? 
index 
which 
--------

Ans)
class A{
  public void print()
  {
    String name="abcab  ";
    char a[]=name.toCharArray();
    String  store;
    int coutn=0;

    for(int i=0;i<a.length;i++)
    {
      for(int j=i+1;j<a.length;j++)
      {
        if(a[i]==a[j])
        {
          System.out.println(a[i]+" : index number : "+i +","+j);
          coutn++;
        }
        

      }
    }
    System.out.println("Number of element : "+coutn );
  }
}
public class Main extends A{
  public static void main(String [] args)
  {
    Main sc=new Main();
    sc.print();
  }
}


9)
how many space present in a string ? 
------------------------------------------

Ans)

Interface + class
1)
import java.util.Scanner;

interface A{
  void run();
}
public class Main implements A{
  public void run(){
    Scanner input=new Scanner (System.in);
    System.out.println("Enter your name");
    String name=input.nextLine();

    char a[]=name.toCharArray();

    char space=' ';

    int count=0;

    for(int i=0;i<=a.length-1;i++)
    {
      if(a[i]==space)
      {
        count++;
      }
    }
    System.out.println("In this String number of space is : "+ count);
  }
  public static void main(String [] args)
  {
    Main sc=new Main();
    sc.run();
  }
}

2) Thread + class


import java.util.Scanner;
class A extends Thread {
  public void run(){
    Scanner scanner = new Scanner(System.in);
    String name=scanner.nextLine();
    char a[]=name.toCharArray();
    int count=0;
    char space=' ';
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==space)
      {
        count++;
      }
    }
    System.out.println("Number of spaces in the string is "+count);
  }
}
public class Main{
  public static void main(String [] args)
  {
    A sc=new A();
    sc.start();
    A cs=new A();
    cs.start();
  }
}


Q.java is a platform independent language. 

e :present 
--------------
Ans)
     public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==find)
      {
        count++;
      }
    }

    System.out.println("This line me e number of prsint : "+ count);
  }
}


Q. java is a platform independent language. 

e :first time : index :present 
------------------------------------------------------
Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==find)
      {
          System.out.print("this is index number : "+i);
          break;
      }
     
    }

    
  }
}


Q. -------------------------------------------------------------
java is a platform independent language. 

e :first time all e with index :present 
--------------------------------------------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==find)
      {
          System.out.println("this is index number : "+i);
        
      }
     
    }

    
  }
}

 
Q. java is a platform independent language. 

e :count  
-------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;
    for(int i=0;i<a.length;i++)
    {
      if(a[i]==find)
      {
          count++;
      }
     
    }
    System.out.println("Numbre of this e element : "+count);
    
  }
}

Q. -------------------------------------------------------------
java is a platform independent language. 

vowel and consoant 
---------------------------------------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
        count++;
        System.out.println(a[i]+" vowel index is : "+i);
      }
      else {
        System.out.println(a[i]+" This is consoant : "+i);
      }
     
    }
   
    
  }
}

Q. java is a platform independent language. 

vowel only 
---------------
Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
     
        System.out.println(a[i]+" vowel index is : "+i);
      }
      
     
    }
   
    
  }
}

Q. java is a platform independent language. 

vowel how much 
-----------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
        count++;
      }
      
     
    }
   System.out.println("Number of vowel : "+count);
    
  }
}

Q. java is a platform independent language. 

vowel index 
--------------

Ans)

public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
        System.out.println("vowel index Number : "+i);
      }
      
     
    }
    
  }
}

Q. java is a platform independent language. 

index print only vowel index 
---------------------------------------

Ans)

public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')
      {
        System.out.println("vowel index : "+a[i]);
      }
      
     
    }
    
  }
}

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')
      {
        // System.out.println("consoant index : "+a[i]);
        count++;
      }
      
     
    }
    System.out.println("consoant number of : "+count);
    
  }
}

Q. java is a platform independent language. 

 consoant :index (j :0)
------------------------------------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')
      {
        System.out.println("consoant index : "+i);
     
      }
      
     
    }
   
  }
}

Q. java is a platform independent language. 

 consoant :which 
----------------------------

Ans)
public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')
      {
        System.out.println("consoant : "+a[i]);
     
      }
      
     
    }
   
  }
}


Q. java is a platform independent language. 

 consoant :index only index print (0,2) position | location 


Ans)

public class Main{
  public static void main(String [] args)
  {
    String name="java is a platform independent language. ";

    char a[]=name.toCharArray();

    char find='e';
    int count=0;

    for(int i=0;i<a.length;i++)
    {
      if(a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')
      {
        System.out.println("consoant : "+a[i]+" : consoant index number : "+i);
     
      }
      
     
    }
   
  }
}

